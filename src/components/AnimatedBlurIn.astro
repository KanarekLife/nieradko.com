---
interface Props {
	duration?: number;
	delay?: number;
	class?: string;
	replayOnEvent?: boolean;
}

const { duration = 1000, delay = 0, class: customClass, replayOnEvent } = Astro.props;
---

<animated-blurin data-duration={duration} data-delay={delay} class={`${customClass} hide_before_animation`} data-replay-on-event={replayOnEvent}>
	<slot />
</animated-blurin>

<script>
	import { gsap } from "gsap";

	export class AnimatedBlurIn extends HTMLElement {
		connectedCallback() {
			const duration = parseInt(this.getAttribute("data-duration")!);
			const delay = parseInt(this.getAttribute("data-delay")!);
			const replayOnEvent = this.getAttribute("data-replay-on-event") !== null;

			const tl = gsap
                .timeline({
                    scrollTrigger: this,
                })
				.set(this, { opacity: 1 })
				.from(this, {
					duration: duration / 1000,
					delay: delay / 1000,
					filter: "blur(10px)",
					ease: "power2.out",
				});
				
			if (replayOnEvent) {
				window.addEventListener('restartAnimation', () => {
					tl.restart();
				})
			}
		}
	}

	customElements.define("animated-blurin", AnimatedBlurIn);
</script>
