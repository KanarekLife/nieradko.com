---
export interface Props {
    duration?: number;
    delay?: number;
}
const { duration = 1500, delay = 0 } = Astro.props;
---

<animated-matrix-text data-duration={duration} data-delay={delay} class="hide_before_animation">
    <slot />
</animated-matrix-text>

<script>
    import gsap from "gsap";
    import ScrambleText from '@lib/client/ScrambleText';

    class AnimatedMatrixText extends HTMLElement {
        connectedCallback() {
            const duration = parseInt(this.getAttribute('data-duration')!);
            const delay = parseInt(this.getAttribute('data-delay')!);
            const scrambleText = new ScrambleText(this, {
                timeOffset: duration / this.textContent!.length
            });

            gsap
                .timeline({
                    scrollTrigger: this
                })
                .set(this, { opacity: 1 })
                .from(this, {
                    duration: duration / 1000,
                    delay: delay / 1000,
                    onStart: () => { scrambleText.start() }
                });
        }
    }

    customElements.define('animated-matrix-text', AnimatedMatrixText);
</script>