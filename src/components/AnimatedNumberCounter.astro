---
export interface Props {
    start?: number;
    value: number;
    duration?: number;
}
const { start = 0, value, duration = 1500 } = Astro.props;
---

<animated-number-counter data-start={start} data-duration={duration} class="hide_before_animation">
    {value}
</animated-number-counter>

<script>
    import gsap from "gsap";
    import { Power1 } from "gsap";

    class AnimatedNumberCounter extends HTMLElement {
        connectedCallback() {
            const start = parseInt(this.getAttribute('data-start')!);
            const duration = parseInt(this.getAttribute('data-duration')!);

            gsap
                .timeline({
                    scrollTrigger: this
                })
                .set(this, {opacity: 1})
                .from(this, {
                    textContent: start.toString(),
                    duration: duration / 1000,
                    ease: Power1.easeInOut,
                    snap: { textContent: 1 },
                    stagger: 1
                });
        }
    }

    customElements.define('animated-number-counter', AnimatedNumberCounter);
</script>